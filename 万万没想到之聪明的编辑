//简单模拟
//首先将连续长度的相同字符处理为2位，然后再处理
#include <iostream>
#include <stdio.h>
#include <string>
using namespace std;
string slove(string a,int n)
{
    string ans="";
    for(int i=0;i<n;i++)
    {
        if(i+2<n&&a[i]==a[i+1]&&a[i+1]==a[i+2])
        {
            continue;
        }
        else 
        {
            ans=ans+a[i];
        }
    }
    int len=ans.length();
    string ans1="";
    for(int i=0;i<len;i++)
    {
        if(i+3<len&&ans[i]==ans[i+1]&&ans[i+2]==ans[i+3])
        {
            ans1=ans1+ans[i];
            ans1=ans1+ans[i+1];
            ans1=ans1+ans[i+2];
            i++;
            i++;
            i++;
        }
        else 
        {
            ans1=ans1+ans[i];
        }
    }
    return ans1;
}
int main()
{
    int n;
    while(~scanf("%d",&n))
    {
        for(int i=0;i<n;i++)
        {
            string a;
            cin>>a;
            int len=a.length();
            cout<<slove(a,len)<<endl;
        }
    }
}
